Instructions coding test
Congratulations to have become one of a handful of people we have shortlisted for the position
EBI01717 at the European Bioinformatics Institute. We are looking forward to get to know you
better over the coming weeks.
Please follow the instructions below and provide answers. Your reply should include links to
your source code on a publicly accessible repository (GitHub / Gitlab / Atlassian ...) and your
docker image on Docker Hub or similar free platform. You should provide adequate information on
how to run your application, along with any other information we should be aware of.
If you cannot do all questions, don’t worry - please submit your results anyway. Just share
the results of what you do know, or let us know how you think about a challenge like this, even if
you did not complete a coding task. The questions are carefully selected to well reflect real
problems you would commonly encounter in this position, and you are free to complete them in any
programming language that seems appropriate to you for the task.
We will look at this test both to assess your skills in different areas of coding, which level
you are at with different coding languages, general coding know-how, and how you approach
complex problems, which may (quite likely) be different than any problems you have encountered
before. Do your best, and good luck!
A. Code comprehension
Question 1

2
2

B. Scripting challenge
Question 1
Question 2

2
2
2

C. DevOps
Question 1

3
3

Question 2
Question 3

3
3

D. Coding Challenge
Question 1
Question 2
Question 3

3
3
4
4

E. Developing a simple web service
Question 1. Develop a REST-like web service
Question 2. Creating a Docker image
Question 3. Scaling up

5
5
5
5

F. Develop a REST API entry point
Question 1. Your task
Question 2. Deployment
Question 3. Testing
Question 4. Message queue

6
6
7
7
7

A. Code comprehension
Question 1
What does the following Python code do? How could the same result be achieved in a simpler way?
from random import randint
def foo(length):
list = []
is_done = False
while (is_done == False):
r = randint(1,length)
is_found = False
for n in list:
if (n==r):
is_found = True
break
if (is_found == False):
list.append(r)
if (len(list) == length):
is_done = True
return list
x = foo(10)
print x

B. Scripting challenge
Question 1
Write a short program in a language of your choice (or pseudocode) to identify duplicate lines in a
file.

Question 2
Modify your program so it does not use hashes or dictionaries.

C. DevOps
Question 1
What is the difference between a VM and a container? Give an example of each.

Question 2
What are gocd, cfengine, ansible and puppet?

Question 3
How does AWS charge for compute and storage?

D. Coding Challenge
Question 1
The XML below lists four articles by four different authors. Your task is write code to generate a
matrix similar to the one shown:
|
|
|
|
|
|

----------Doe, John
Doe, Jane
Public, JQ
Smith, John

|
|
|
|
|
|

Doe, John
--------3
1
1
1

|
|
|
|
|
|

Doe, Jane
--------1
2
1
0

|
|
|
|
|
|

Public, JQ
---------1
1
2
0

|
|
|
|
|
|

Smith, John
----------1
0
0
1

|
|
|
|
|
|

Each cell ​i,​ ​j​ should list the number of articles (say ​N)​ co-authored by the author in row ​i​ and the
author is column ​j​. You may output your results to the command line as a textual representation
<?xml version="1.0" encoding="UTF-8"?>
<MedlineCitationSet>
<Article>
<ArticleTitle>Title 1</ArticleTitle>
<AuthorList>
<Author>
<LastName>Public</LastName>
<ForeName>J Q</ForeName>
<Initials>JQ</Initials>
</Author>
<Author>
<LastName>Doe</LastName>
<ForeName>John</ForeName>
<Initials>J</Initials>
</Author>
</AuthorList>
</Article>
<Article>
<ArticleTitle>Title 2</ArticleTitle>
<AuthorList>
<Author>
<LastName>Doe</LastName>
<ForeName>John</ForeName>
<Initials>J</Initials>
</Author>
<Author>
<LastName>Doe</LastName>
<ForeName>Jane</ForeName>
<Initials>J</Initials>
</Author>
</AuthorList>
</Article>
<Article>
<ArticleTitle>Title 3</ArticleTitle>
<AuthorList>

<Author>
<LastName>Doe</LastName>
<ForeName>Jane</ForeName>
<Initials>J</Initials>
</Author>
<Author>
<LastName>Public</LastName>
<ForeName>J Q</ForeName>
<Initials>JQ</Initials>
</Author>
</AuthorList>
</Article>
<Article>
<ArticleTitle>Title 4</ArticleTitle>
<AuthorList>
<Author>
<LastName>Smith</LastName>
<ForeName>John</ForeName>
<Initials>J</Initials>
</Author>
<Author>
<LastName>Doe</LastName>
<ForeName>John</ForeName>
<Initials>J</Initials>
</Author>
</AuthorList>
</Article>
</MedlineCitationSet>

Question 2
How would you design a test suite for the above application? You are not required to write any test
cases but to describe your processes.

Question 3
The above XML format is very similar to the Medline dataset, which contains over 22 million
records. What problems do you foresee in scaling the above solution to these numbers of records.

E. Developing a simple web service
Question 1. Develop a REST-like web service
Develop a REST-like web service providing a single endpoint called ​date​. The endpoint should
respond with the current date and time (similar to the Unix ​date​ command). The response should be
in JSON format.
An example request and response are shown below:
$ curl http://my-example-service.com/date
{ "date": "Wed Sep 20 15:32:35 BST 2017" }

You should use the programming language and framework that you feel most comfortable with.
You should manage your source code with git and upload it to a personal account on GitHub
(​https://github.com​).

Question 2. Creating a Docker image
Create a Docker image for the web service you have just developed and upload it to a personal
Docker Hub account (​https://hub.docker.com​). You should configure your GitHub repository and
Docker Hub account so that a new commit to your repository will automatically trigger a new build
of your docker image.

Question 3. Scaling up
Congratulations, your date web service has become very popular! The increase in traffic means that
you will need to deploy five instances of your service in order to meet demand. Explain how you
would do this.

F. Develop a REST API entry point
Background
The putative “Ensembl Services Platform” allows users to search for a gene by its name. One web
REST service is available on this platform to get all gene names corresponding to a pattern.
The entry point accepts a string as parameter and return the list of matching genes in our database.
For example, if the user submit ​brc​ a list of suggested gene names may be:
●
●
●
●

BRCA1
BRCA2
BRCC3
BRCC3P1

Source public database
The Ensembl public MySQL server provides a database ​ensembl_website_97​ with a table name
gene_autocomplete​.
Each row in the table represents a gene. The relevant fields for this exercise are:
● display_name - the name of the gene
● species - the name of the species to which the gene belongs
The server connection details are:
host: ensembldb.ensembl.org
port: 3306
user: anonymous

No password is required.

Question 1. Your task
Using the technology of your choice (preferably Python or Java), develop a REST Entry point
service that provides a single endpoint ​genes​.
The endpoint should accept the following parameters:
● lookup - the partial query typed by the user, e.g. ​brc​ (as in the example above)
● species - the name of the target species, e.g. ​homo_sapiens​ (not mandatory)
The endpoint would respond with a list of corresponding entries for the given query and target
species with:
● gene names (display_label field)
● location (location field)
● Ensembl stable ID (stable_id field)

● species (species field)
Some Business Rules:
● Your service should use the public website database (detailed above) as its data source.
● Service would answer on GET queries, other queries (POST/PUT/PATCH) should return an
error (405 HTTP code)
● Submitted parameter must not be under 3 chars (If submitted with less than 3 character, an
error code is returned (400 HTTP code))
● Species parameter is not required

Question 2. Deployment
Describe how would you deploy your web service. How would you ensure your solution can scale
to meet increased demand?

Question 3. Testing
What strategies would you employ to test your application? How would you automate testing?

Question 4. Message queue
This endpoint is eventually set up as a services entry point, and should be accessed from a message
queue such as RabbitMQ (https://www.rabbitmq.com/)
What would you suggest to connect your REST API service within this context.
How does this impact your testing strategy?

